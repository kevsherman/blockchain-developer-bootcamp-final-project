{
  "contractName": "MetaMarket",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "listingId",
          "type": "uint256"
        }
      ],
      "name": "LogNewListing",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "listingId",
          "type": "uint256"
        }
      ],
      "name": "LogRemovedListing",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "listingId",
          "type": "uint256"
        }
      ],
      "name": "LogSoldListing",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "listingId",
          "type": "uint256"
        }
      ],
      "name": "LogUpdatedListing",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "listings",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "listingId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tokenContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenContractId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "enum MetaMarket.State",
          "name": "state",
          "type": "uint8"
        },
        {
          "internalType": "address payable",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "buyer",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalListings",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "createListing",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "listingId",
          "type": "uint256"
        }
      ],
      "name": "removeListing",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "listingId",
          "type": "uint256"
        }
      ],
      "name": "updatePrice",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "listingId",
          "type": "uint256"
        }
      ],
      "name": "purchaseListing",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawFees",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"listingId\",\"type\":\"uint256\"}],\"name\":\"LogNewListing\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"listingId\",\"type\":\"uint256\"}],\"name\":\"LogRemovedListing\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"listingId\",\"type\":\"uint256\"}],\"name\":\"LogSoldListing\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"listingId\",\"type\":\"uint256\"}],\"name\":\"LogUpdatedListing\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"createListing\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"listings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"listingId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenContractId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"enum MetaMarket.State\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"address payable\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"buyer\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"listingId\",\"type\":\"uint256\"}],\"name\":\"purchaseListing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"listingId\",\"type\":\"uint256\"}],\"name\":\"removeListing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalListings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"listingId\",\"type\":\"uint256\"}],\"name\":\"updatePrice\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFees\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"@kevsherman\",\"kind\":\"dev\",\"methods\":{\"createListing(address,uint256,uint256)\":{\"details\":\"The safeTransferFrom() handles ensuring ownership and approvals, so they aren't included as modifiers.\"},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Figure out how to remove warning re: unused variables\"},\"purchaseListing(uint256)\":{\"details\":\"To Do:         1. validate the transaction has sufficient eth        2. transfer eth to seller        3. transfer nft to buyer        4. mark listing as Sold        5. return any excess funds to buyer        6. return a bool for success/failure\"},\"removeListing(uint256)\":{\"details\":\"To Do:      1. validate that msg.sender is the seller      2. mark the item as 'cancelled'      3. emit a LogRemovedListing event      4. Return a bool for success/failure\"},\"updatePrice(uint256)\":{\"details\":\"To Do:      1. validate it is the seller attempting to update the listing      2. validate that msg.sender is the seller      3. emit a LogUpdatedListing event      4. Return a bool for success/failure\"},\"withdrawFees(uint256)\":{\"details\":\"To Do: No fees currently collected to withdraw\"}},\"title\":\"A smart contract to enable buying and selling of ERC721 tokens\",\"version\":1},\"userdoc\":{\"events\":{\"LogNewListing(uint256)\":{\"notice\":\"Event to be emitted when a new Listing has been created\"},\"LogRemovedListing(uint256)\":{\"notice\":\"Event to be emitted when a Listing has been removed\"},\"LogSoldListing(uint256)\":{\"notice\":\"Event emitted when a Listing has been updated\"},\"LogUpdatedListing(uint256)\":{\"notice\":\"Event to be emitted when a Listing has been updated\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Initializes the contract by setting the owner and the totalListings variable.\"},\"createListing(address,uint256,uint256)\":{\"notice\":\"Allow a seller to list an NFT for sale, transfer the token to the MetaMarket address\"},\"listings(uint256)\":{\"notice\":\"Mapping from listingId to Listing\"},\"onERC721Received(address,address,uint256,bytes)\":{\"notice\":\"Override function to allow for recieving ERC721 tokens\"},\"owner()\":{\"notice\":\"Owner set when contract deployed\"},\"purchaseListing(uint256)\":{\"notice\":\"Allow a buyer to update the listing price\"},\"removeListing(uint256)\":{\"notice\":\"Allow a seller to remove the listing and get the token back from the MetaMarket address\"},\"totalListings()\":{\"notice\":\"Count of the total listings created\"},\"updatePrice(uint256)\":{\"notice\":\"Allow a seller to update the listing price\"},\"withdrawFees(uint256)\":{\"notice\":\"Allow the contract owner to withdraw accrued fees\"}},\"notice\":\"Still a WIP, demo purposes only\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/MetaMarket.sol\":\"MetaMarket\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x7d2b8ba4b256bfcac347991b75242f9bc37f499c5236af50cf09d0b35943dc0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8eeaf6afe00229af4c232ca058bb08b7a24cc3886f0b387159ac49ffd8b5312\",\"dweb:/ipfs/QmdnVKmDDWDvdRr6vtrxy3G6WafqA2TAhUZv1UFMsm4B4r\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf101e8720213560fab41104d53b3cc7ba0456ef3a98455aa7f022391783144a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e7820bcf567e6892d937c3cb10db263a4042e446799bca602535868d822384e\",\"dweb:/ipfs/QmPG2oeDjKncqsEeyYGjAN7CwAJmMgHterXGGnpzhha4z7\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd9517254724276e2e8de3769183c1f738f445f0095c26fd9b86d3c6687e887b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e604bcdcd5e5b2fb299ad09769cde6db19d5aa1929d1b5e939234a0f10d7eb8\",\"dweb:/ipfs/Qmd8hXE3GZfBHuWx3RNiYgFW2ci7KvHtib8DiwzJ2dgo9V\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xd32fb7f530a914b1083d10a6bed3a586f2451952fec04fe542bcc670a82f7ba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af63ab940a34687c45f0ad84960b048fc5f49330c92ccb422db7822a444733b9\",\"dweb:/ipfs/QmUShaQEu8HS1GjDnsMJQ8jkZEBrecn6NuDZ3pfjY1gVck\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39a05eec7083dfa0cc7e0cbfe6cd1bd085a340af1ede93fdff3ad047c5fb3d8e\",\"dweb:/ipfs/QmVApz5fCUq2QC8gKTsNNdCmcedJ3ETHp68zR5N3WUKS4r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x391d3ba97ab6856a16b225d6ee29617ad15ff00db70f3b4df1ab5ea33aa47c9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d636ba90bbbeed04a1ea7fe9ec2466757e30fd38ba2ca173636dbf69a518735e\",\"dweb:/ipfs/QmQwCB2BHnEuYR22PYt9HkpbgeFDhq4rHmaYqAZbX3WRC7\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]},\"project:/contracts/MetaMarket.sol\":{\"keccak256\":\"0x96ed94f74152dc593f57344a1f62bd1ab636cea4a77e65126ed7ae40c3ee56f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4049ca2098b3a630390bb6c001ac53cc7348aa745611b470ac66d16124d9642a\",\"dweb:/ipfs/Qme1ExqdbcjX1YAUsgYAs1LFddhabyg353DtWgfm7xGd7Y\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600181905550610d2c806100686000396000f3fe6080604052600436106100865760003560e01c80635e318e07116100595780635e318e07146101725780638d6cc56d146101a25780638da5cb5b146101df578063c78b616c1461020a578063de74e57b1461023557610086565b8063150b7a021461008b578063169d5a7d146100c857806324780c56146100f8578063479ad4c314610135575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad91906108ce565b610278565b6040516100bf9190610991565b60405180910390f35b6100e260048036038101906100dd91906109ac565b6102a6565b6040516100ef91906109f4565b60405180910390f35b34801561010457600080fd5b5061011f600480360381019061011a9190610a0f565b6102ad565b60405161012c9190610a71565b60405180910390f35b34801561014157600080fd5b5061015c600480360381019061015791906109ac565b61056e565b60405161016991906109f4565b60405180910390f35b61018c600480360381019061018791906109ac565b6105e5565b60405161019991906109f4565b60405180910390f35b3480156101ae57600080fd5b506101c960048036038101906101c491906109ac565b61067b565b6040516101d691906109f4565b60405180910390f35b3480156101eb57600080fd5b506101f46106f2565b6040516102019190610a9b565b60405180910390f35b34801561021657600080fd5b5061021f610716565b60405161022c9190610a71565b60405180910390f35b34801561024157600080fd5b5061025c600480360381019061025791906109ac565b61071c565b60405161026f9796959493929190610b4e565b60405180910390f35b60007f150b7a023d4804d13e8c85fb27262cb750cf6ba9f9dd3bb30d90f482ceeb4b1f905095945050505050565b6000919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82106102db57600080fd5b60018060008282546102ed9190610bec565b925050819055506040518060e0016040528060015481526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020016000600281111561034357610342610ab6565b5b81526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152506002600060015481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003015560808201518160040160006101000a81548160ff0219169083600281111561042457610423610ab6565b5b021790555060a08201518160040160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050508373ffffffffffffffffffffffffffffffffffffffff166342842e0e3330866040518463ffffffff1660e01b81526004016104f793929190610c42565b600060405180830381600087803b15801561051157600080fd5b505af1158015610525573d6000803e3d6000fd5b505050507f9e237612f71f9b8fec1087d90872ad11daf6dfacd0f23e07bea88931b3a62cf660015460405161055a9190610a71565b60405180910390a160015490509392505050565b6000813373ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060040160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146105df57600080fd5b50919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610676576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066d90610cd6565b60405180910390fd5b919050565b6000813373ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060040160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146106ec57600080fd5b50919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b60026020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040160009054906101000a900460ff16908060040160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905087565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610800826107d5565b9050919050565b610810816107f5565b811461081b57600080fd5b50565b60008135905061082d81610807565b92915050565b6000819050919050565b61084681610833565b811461085157600080fd5b50565b6000813590506108638161083d565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261088e5761088d610869565b5b8235905067ffffffffffffffff8111156108ab576108aa61086e565b5b6020830191508360018202830111156108c7576108c6610873565b5b9250929050565b6000806000806000608086880312156108ea576108e96107cb565b5b60006108f88882890161081e565b95505060206109098882890161081e565b945050604061091a88828901610854565b935050606086013567ffffffffffffffff81111561093b5761093a6107d0565b5b61094788828901610878565b92509250509295509295909350565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61098b81610956565b82525050565b60006020820190506109a66000830184610982565b92915050565b6000602082840312156109c2576109c16107cb565b5b60006109d084828501610854565b91505092915050565b60008115159050919050565b6109ee816109d9565b82525050565b6000602082019050610a0960008301846109e5565b92915050565b600080600060608486031215610a2857610a276107cb565b5b6000610a368682870161081e565b9350506020610a4786828701610854565b9250506040610a5886828701610854565b9150509250925092565b610a6b81610833565b82525050565b6000602082019050610a866000830184610a62565b92915050565b610a95816107f5565b82525050565b6000602082019050610ab06000830184610a8c565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110610af657610af5610ab6565b5b50565b6000819050610b0782610ae5565b919050565b6000610b1782610af9565b9050919050565b610b2781610b0c565b82525050565b6000610b38826107d5565b9050919050565b610b4881610b2d565b82525050565b600060e082019050610b63600083018a610a62565b610b706020830189610a8c565b610b7d6040830188610a62565b610b8a6060830187610a62565b610b976080830186610b1e565b610ba460a0830185610b3f565b610bb160c0830184610b3f565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610bf782610833565b9150610c0283610833565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610c3757610c36610bbd565b5b828201905092915050565b6000606082019050610c576000830186610a8c565b610c646020830185610a8c565b610c716040830184610a62565b949350505050565b600082825260208201905092915050565b7f4e6f7420617574686f72697a65642e0000000000000000000000000000000000600082015250565b6000610cc0600f83610c79565b9150610ccb82610c8a565b602082019050919050565b60006020820190508181036000830152610cef81610cb3565b905091905056fea2646970667358221220c57f590835b74251ef3015ec298f1d92d125cd690578525a7c1d60db0727e28e64736f6c63430008090033",
  "deployedBytecode": "0x6080604052600436106100865760003560e01c80635e318e07116100595780635e318e07146101725780638d6cc56d146101a25780638da5cb5b146101df578063c78b616c1461020a578063de74e57b1461023557610086565b8063150b7a021461008b578063169d5a7d146100c857806324780c56146100f8578063479ad4c314610135575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad91906108ce565b610278565b6040516100bf9190610991565b60405180910390f35b6100e260048036038101906100dd91906109ac565b6102a6565b6040516100ef91906109f4565b60405180910390f35b34801561010457600080fd5b5061011f600480360381019061011a9190610a0f565b6102ad565b60405161012c9190610a71565b60405180910390f35b34801561014157600080fd5b5061015c600480360381019061015791906109ac565b61056e565b60405161016991906109f4565b60405180910390f35b61018c600480360381019061018791906109ac565b6105e5565b60405161019991906109f4565b60405180910390f35b3480156101ae57600080fd5b506101c960048036038101906101c491906109ac565b61067b565b6040516101d691906109f4565b60405180910390f35b3480156101eb57600080fd5b506101f46106f2565b6040516102019190610a9b565b60405180910390f35b34801561021657600080fd5b5061021f610716565b60405161022c9190610a71565b60405180910390f35b34801561024157600080fd5b5061025c600480360381019061025791906109ac565b61071c565b60405161026f9796959493929190610b4e565b60405180910390f35b60007f150b7a023d4804d13e8c85fb27262cb750cf6ba9f9dd3bb30d90f482ceeb4b1f905095945050505050565b6000919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82106102db57600080fd5b60018060008282546102ed9190610bec565b925050819055506040518060e0016040528060015481526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020016000600281111561034357610342610ab6565b5b81526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152506002600060015481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003015560808201518160040160006101000a81548160ff0219169083600281111561042457610423610ab6565b5b021790555060a08201518160040160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050508373ffffffffffffffffffffffffffffffffffffffff166342842e0e3330866040518463ffffffff1660e01b81526004016104f793929190610c42565b600060405180830381600087803b15801561051157600080fd5b505af1158015610525573d6000803e3d6000fd5b505050507f9e237612f71f9b8fec1087d90872ad11daf6dfacd0f23e07bea88931b3a62cf660015460405161055a9190610a71565b60405180910390a160015490509392505050565b6000813373ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060040160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146105df57600080fd5b50919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610676576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066d90610cd6565b60405180910390fd5b919050565b6000813373ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060040160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146106ec57600080fd5b50919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b60026020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040160009054906101000a900460ff16908060040160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905087565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610800826107d5565b9050919050565b610810816107f5565b811461081b57600080fd5b50565b60008135905061082d81610807565b92915050565b6000819050919050565b61084681610833565b811461085157600080fd5b50565b6000813590506108638161083d565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261088e5761088d610869565b5b8235905067ffffffffffffffff8111156108ab576108aa61086e565b5b6020830191508360018202830111156108c7576108c6610873565b5b9250929050565b6000806000806000608086880312156108ea576108e96107cb565b5b60006108f88882890161081e565b95505060206109098882890161081e565b945050604061091a88828901610854565b935050606086013567ffffffffffffffff81111561093b5761093a6107d0565b5b61094788828901610878565b92509250509295509295909350565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61098b81610956565b82525050565b60006020820190506109a66000830184610982565b92915050565b6000602082840312156109c2576109c16107cb565b5b60006109d084828501610854565b91505092915050565b60008115159050919050565b6109ee816109d9565b82525050565b6000602082019050610a0960008301846109e5565b92915050565b600080600060608486031215610a2857610a276107cb565b5b6000610a368682870161081e565b9350506020610a4786828701610854565b9250506040610a5886828701610854565b9150509250925092565b610a6b81610833565b82525050565b6000602082019050610a866000830184610a62565b92915050565b610a95816107f5565b82525050565b6000602082019050610ab06000830184610a8c565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110610af657610af5610ab6565b5b50565b6000819050610b0782610ae5565b919050565b6000610b1782610af9565b9050919050565b610b2781610b0c565b82525050565b6000610b38826107d5565b9050919050565b610b4881610b2d565b82525050565b600060e082019050610b63600083018a610a62565b610b706020830189610a8c565b610b7d6040830188610a62565b610b8a6060830187610a62565b610b976080830186610b1e565b610ba460a0830185610b3f565b610bb160c0830184610b3f565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610bf782610833565b9150610c0283610833565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610c3757610c36610bbd565b5b828201905092915050565b6000606082019050610c576000830186610a8c565b610c646020830185610a8c565b610c716040830184610a62565b949350505050565b600082825260208201905092915050565b7f4e6f7420617574686f72697a65642e0000000000000000000000000000000000600082015250565b6000610cc0600f83610c79565b9150610ccb82610c8a565b602082019050919050565b60006020820190508181036000830152610cef81610cb3565b905091905056fea2646970667358221220c57f590835b74251ef3015ec298f1d92d125cd690578525a7c1d60db0727e28e64736f6c63430008090033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:9746:10",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:10",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:10"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:10",
                "type": ""
              }
            ],
            "src": "7:75:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:10",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:10"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:10",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:10"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:10",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:10",
                "type": ""
              }
            ],
            "src": "334:126:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:10",
                "type": ""
              }
            ],
            "src": "466:96:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:10"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:10"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:10",
                "type": ""
              }
            ],
            "src": "568:122:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "748:87:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "758:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "780:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "767:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "767:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "758:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "823:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "796:26:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "796:33:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "796:33:10"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "726:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "734:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "742:5:10",
                "type": ""
              }
            ],
            "src": "696:139:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "886:32:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "896:16:10",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "907:5:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "896:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "868:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "878:7:10",
                "type": ""
              }
            ],
            "src": "841:77:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "967:79:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1024:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1033:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1036:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1026:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1026:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1026:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "990:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1015:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "997:17:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "997:24:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "987:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "987:35:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "980:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "980:43:10"
                  },
                  "nodeType": "YulIf",
                  "src": "977:63:10"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "960:5:10",
                "type": ""
              }
            ],
            "src": "924:122:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1104:87:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1114:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1136:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1123:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1123:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1114:5:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1179:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1152:26:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1152:33:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1152:33:10"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1082:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1090:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1098:5:10",
                "type": ""
              }
            ],
            "src": "1052:139:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1286:28:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1303:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1306:1:10",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1296:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1296:12:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1296:12:10"
                }
              ]
            },
            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
            "nodeType": "YulFunctionDefinition",
            "src": "1197:117:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1409:28:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1426:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1429:1:10",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1419:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1419:12:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1419:12:10"
                }
              ]
            },
            "name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
            "nodeType": "YulFunctionDefinition",
            "src": "1320:117:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1532:28:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1549:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1552:1:10",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1542:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1542:12:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1542:12:10"
                }
              ]
            },
            "name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
            "nodeType": "YulFunctionDefinition",
            "src": "1443:117:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1653:478:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1702:83:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                            "nodeType": "YulIdentifier",
                            "src": "1704:77:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1704:79:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1704:79:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1681:6:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1689:4:10",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1677:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1677:17:10"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "1696:3:10"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1673:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1673:27:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1666:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1666:35:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1663:122:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1794:30:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1817:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1804:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1804:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "1794:6:10"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1867:83:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
                            "nodeType": "YulIdentifier",
                            "src": "1869:77:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1869:79:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1869:79:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1839:6:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1847:18:10",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1836:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1836:30:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1833:117:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1959:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1975:6:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1983:4:10",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1971:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1971:17:10"
                  },
                  "variableNames": [
                    {
                      "name": "arrayPos",
                      "nodeType": "YulIdentifier",
                      "src": "1959:8:10"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2042:83:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
                            "nodeType": "YulIdentifier",
                            "src": "2044:77:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2044:79:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2044:79:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "arrayPos",
                            "nodeType": "YulIdentifier",
                            "src": "2007:8:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "2021:6:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2029:4:10",
                                "type": "",
                                "value": "0x01"
                              }
                            ],
                            "functionName": {
                              "name": "mul",
                              "nodeType": "YulIdentifier",
                              "src": "2017:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2017:17:10"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2003:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2003:32:10"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "2037:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2000:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2000:41:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1997:128:10"
                }
              ]
            },
            "name": "abi_decode_t_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1620:6:10",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1628:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "arrayPos",
                "nodeType": "YulTypedName",
                "src": "1636:8:10",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1646:6:10",
                "type": ""
              }
            ],
            "src": "1579:552:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2273:827:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2320:83:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2322:77:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2322:79:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2322:79:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2294:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2303:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2290:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2290:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2315:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2286:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2286:33:10"
                  },
                  "nodeType": "YulIf",
                  "src": "2283:120:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2413:117:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2428:15:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2442:1:10",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2432:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2457:63:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2492:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2503:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2488:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2488:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2512:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2467:20:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2467:53:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2457:6:10"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2540:118:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2555:16:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2569:2:10",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2559:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2585:63:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2620:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2631:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2616:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2616:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2640:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2595:20:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2595:53:10"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2585:6:10"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2668:118:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2683:16:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2697:2:10",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2687:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2713:63:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2748:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2759:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2744:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2744:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2768:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2723:20:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2723:53:10"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "2713:6:10"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2796:297:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2811:46:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2842:9:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2853:2:10",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2838:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2838:18:10"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2825:12:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2825:32:10"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2815:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2904:83:10",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                "nodeType": "YulIdentifier",
                                "src": "2906:77:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2906:79:10"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2906:79:10"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2876:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2884:18:10",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2873:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2873:30:10"
                      },
                      "nodeType": "YulIf",
                      "src": "2870:117:10"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3001:82:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3055:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3066:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3051:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3051:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3075:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes_calldata_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "3019:31:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3019:64:10"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "3001:6:10"
                        },
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "3009:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2211:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2222:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2234:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2242:6:10",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2250:6:10",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2258:6:10",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "2266:6:10",
                "type": ""
              }
            ],
            "src": "2137:963:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3150:105:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3160:89:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3175:5:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3182:66:10",
                        "type": "",
                        "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3171:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3171:78:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3160:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3132:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3142:7:10",
                "type": ""
              }
            ],
            "src": "3106:149:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3324:52:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3341:3:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3363:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bytes4",
                          "nodeType": "YulIdentifier",
                          "src": "3346:16:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3346:23:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3334:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3334:36:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3334:36:10"
                }
              ]
            },
            "name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3312:5:10",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3319:3:10",
                "type": ""
              }
            ],
            "src": "3261:115:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3478:122:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3488:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3500:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3511:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3496:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3496:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3488:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3566:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3579:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3590:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3575:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3575:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3524:41:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3524:69:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3524:69:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3450:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3462:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3473:4:10",
                "type": ""
              }
            ],
            "src": "3382:218:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3672:263:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3718:83:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "3720:77:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3720:79:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3720:79:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3693:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3702:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3689:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3689:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3714:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3685:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3685:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "3682:119:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3811:117:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3826:15:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3840:1:10",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3830:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3855:63:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3890:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3901:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3886:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3886:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3910:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3865:20:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3865:53:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3855:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3642:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3653:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3665:6:10",
                "type": ""
              }
            ],
            "src": "3606:329:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3983:48:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3993:32:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4018:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4011:6:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4011:13:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4004:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4004:21:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3993:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3965:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3975:7:10",
                "type": ""
              }
            ],
            "src": "3941:90:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4096:50:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4113:3:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4133:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "4118:14:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4118:21:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4106:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4106:34:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4106:34:10"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4084:5:10",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4091:3:10",
                "type": ""
              }
            ],
            "src": "4037:109:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4244:118:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4254:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4266:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4277:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4262:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4262:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4254:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4328:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4341:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4352:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4337:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4337:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4290:37:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4290:65:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4290:65:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4216:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4228:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4239:4:10",
                "type": ""
              }
            ],
            "src": "4152:210:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4468:519:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4514:83:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "4516:77:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4516:79:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4516:79:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4489:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4498:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4485:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4485:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4510:2:10",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4481:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4481:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "4478:119:10"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4607:117:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4622:15:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4636:1:10",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4626:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4651:63:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4686:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4697:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4682:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4682:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4706:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4661:20:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4661:53:10"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4651:6:10"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4734:118:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4749:16:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4763:2:10",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4753:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4779:63:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4814:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4825:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4810:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4810:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4834:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4789:20:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4789:53:10"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "4779:6:10"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4862:118:10",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4877:16:10",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4891:2:10",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4881:6:10",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4907:63:10",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4942:9:10"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4953:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4938:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4938:22:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4962:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4917:20:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4917:53:10"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "4907:6:10"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4422:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4433:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4445:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4453:6:10",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4461:6:10",
                "type": ""
              }
            ],
            "src": "4368:619:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5058:53:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5075:3:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5098:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5080:17:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5080:24:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5068:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5068:37:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5068:37:10"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5046:5:10",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5053:3:10",
                "type": ""
              }
            ],
            "src": "4993:118:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5215:124:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5225:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5237:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5248:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5233:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5233:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5225:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5305:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5318:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5329:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5314:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5314:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5261:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5261:71:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5261:71:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5187:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5199:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5210:4:10",
                "type": ""
              }
            ],
            "src": "5117:222:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5410:53:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5427:3:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5450:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5432:17:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5432:24:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5420:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5420:37:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5420:37:10"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5398:5:10",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5405:3:10",
                "type": ""
              }
            ],
            "src": "5345:118:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5567:124:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5577:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5589:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5600:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5585:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5585:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5577:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5657:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5670:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5681:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5666:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5666:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5613:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5613:71:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5613:71:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5539:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5551:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5562:4:10",
                "type": ""
              }
            ],
            "src": "5469:222:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5725:152:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5742:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5745:77:10",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5735:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5735:88:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5735:88:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5839:1:10",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5842:4:10",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5832:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5832:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5832:15:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5863:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5866:4:10",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5856:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5856:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5856:15:10"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "5697:180:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5936:62:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5970:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x21",
                            "nodeType": "YulIdentifier",
                            "src": "5972:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5972:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5972:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5959:5:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5966:1:10",
                            "type": "",
                            "value": "3"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "5956:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5956:12:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5949:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5949:20:10"
                  },
                  "nodeType": "YulIf",
                  "src": "5946:46:10"
                }
              ]
            },
            "name": "validator_assert_t_enum$_State_$1550",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5929:5:10",
                "type": ""
              }
            ],
            "src": "5883:115:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6059:76:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6069:16:10",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6080:5:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6069:7:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6123:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "validator_assert_t_enum$_State_$1550",
                      "nodeType": "YulIdentifier",
                      "src": "6086:36:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6086:43:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6086:43:10"
                }
              ]
            },
            "name": "cleanup_t_enum$_State_$1550",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6041:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6051:7:10",
                "type": ""
              }
            ],
            "src": "6004:131:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6209:63:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6219:47:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6260:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_enum$_State_$1550",
                      "nodeType": "YulIdentifier",
                      "src": "6232:27:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6232:34:10"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "6219:9:10"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_enum$_State_$1550_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6189:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "6199:9:10",
                "type": ""
              }
            ],
            "src": "6141:131:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6351:74:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6368:3:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6412:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_enum$_State_$1550_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "6373:38:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6373:45:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6361:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6361:58:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6361:58:10"
                }
              ]
            },
            "name": "abi_encode_t_enum$_State_$1550_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6339:5:10",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6346:3:10",
                "type": ""
              }
            ],
            "src": "6278:147:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6484:51:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6494:35:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6523:5:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "6505:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6505:24:10"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6494:7:10"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6466:5:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6476:7:10",
                "type": ""
              }
            ],
            "src": "6431:104:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6622:61:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6639:3:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6670:5:10"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "6644:25:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6644:32:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6632:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6632:45:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6632:45:10"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6610:5:10",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6617:3:10",
                "type": ""
              }
            ],
            "src": "6541:142:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6995:660:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7005:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7017:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7028:3:10",
                        "type": "",
                        "value": "224"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7013:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7013:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7005:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7086:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7099:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7110:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7095:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7095:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7042:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7042:71:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7042:71:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7167:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7180:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7191:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7176:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7176:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7123:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7123:72:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7123:72:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "7249:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7262:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7273:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7258:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7258:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7205:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7205:72:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7205:72:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "7331:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7344:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7355:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7340:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7340:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7287:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7287:72:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7287:72:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "7421:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7434:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7445:3:10",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7430:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7430:19:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_State_$1550_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7369:51:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7369:81:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7369:81:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "7520:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7533:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7544:3:10",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7529:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7529:19:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7460:59:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7460:89:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7460:89:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value6",
                        "nodeType": "YulIdentifier",
                        "src": "7619:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7632:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7643:3:10",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7628:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7628:19:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7559:59:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7559:89:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7559:89:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address_t_uint256_t_uint256_t_enum$_State_$1550_t_address_payable_t_address_payable__to_t_uint256_t_address_t_uint256_t_uint256_t_uint8_t_address_payable_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6919:9:10",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "6931:6:10",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "6939:6:10",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "6947:6:10",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "6955:6:10",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6963:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6971:6:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6979:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6990:4:10",
                "type": ""
              }
            ],
            "src": "6689:966:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7689:152:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7706:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7709:77:10",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7699:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7699:88:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7699:88:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7803:1:10",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7806:4:10",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7796:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7796:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7796:15:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7827:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7830:4:10",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7820:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7820:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7820:15:10"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "7661:180:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7891:261:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7901:25:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7924:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7906:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7906:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "7901:1:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7935:25:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7958:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7940:17:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7940:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "7935:1:10"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8098:22:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8100:16:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8100:18:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8100:18:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8019:1:10"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8026:66:10",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "8094:1:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8022:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8022:74:10"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8016:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8016:81:10"
                  },
                  "nodeType": "YulIf",
                  "src": "8013:107:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8130:16:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8141:1:10"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8144:1:10"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8137:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8137:9:10"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "8130:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7878:1:10",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7881:1:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "7887:3:10",
                "type": ""
              }
            ],
            "src": "7847:305:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8312:288:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8322:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8334:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8345:2:10",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8330:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8330:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8322:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8402:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8415:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8426:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8411:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8411:17:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8358:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8358:71:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8358:71:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8483:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8496:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8507:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8492:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8492:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8439:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8439:72:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8439:72:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "8565:6:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8578:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8589:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8574:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8574:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8521:43:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8521:72:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8521:72:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8268:9:10",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "8280:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8288:6:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8296:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8307:4:10",
                "type": ""
              }
            ],
            "src": "8158:442:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8702:73:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8719:3:10"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8724:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8712:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8712:19:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8712:19:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8740:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8759:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8764:4:10",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8755:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8755:14:10"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "8740:11:10"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8674:3:10",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8679:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "8690:11:10",
                "type": ""
              }
            ],
            "src": "8606:169:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8887:59:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8909:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8917:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8905:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8905:14:10"
                      },
                      {
                        "hexValue": "4e6f7420617574686f72697a65642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8921:17:10",
                        "type": "",
                        "value": "Not authorized."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8898:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8898:41:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8898:41:10"
                }
              ]
            },
            "name": "store_literal_in_memory_7266bddff5abb545cc5c3e00df14df53c6215d4f5ec266a2b22dc0da56941b7e",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8879:6:10",
                "type": ""
              }
            ],
            "src": "8781:165:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9098:220:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9108:74:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9174:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9179:2:10",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9115:58:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9115:67:10"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "9108:3:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9280:3:10"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_7266bddff5abb545cc5c3e00df14df53c6215d4f5ec266a2b22dc0da56941b7e",
                      "nodeType": "YulIdentifier",
                      "src": "9191:88:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9191:93:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9191:93:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9293:19:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9304:3:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9309:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9300:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9300:12:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9293:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_7266bddff5abb545cc5c3e00df14df53c6215d4f5ec266a2b22dc0da56941b7e_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9086:3:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9094:3:10",
                "type": ""
              }
            ],
            "src": "8952:366:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9495:248:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9505:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9517:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9528:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9513:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9513:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9505:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9552:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9563:1:10",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9548:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9548:17:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9571:4:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9577:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9567:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9567:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9541:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9541:47:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9541:47:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9597:139:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9731:4:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_7266bddff5abb545cc5c3e00df14df53c6215d4f5ec266a2b22dc0da56941b7e_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9605:124:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9605:131:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9597:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7266bddff5abb545cc5c3e00df14df53c6215d4f5ec266a2b22dc0da56941b7e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9475:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9490:4:10",
                "type": ""
              }
            ],
            "src": "9324:419:10"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3, value4 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_State_$1550(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_State_$1550(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_State_$1550(value)\n    }\n\n    function convert_t_enum$_State_$1550_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_State_$1550(value)\n    }\n\n    function abi_encode_t_enum$_State_$1550_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_State_$1550_to_t_uint8(value))\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_uint256_t_uint256_t_enum$_State_$1550_t_address_payable_t_address_payable__to_t_uint256_t_address_t_uint256_t_uint256_t_uint8_t_address_payable_t_address_payable__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_enum$_State_$1550_to_t_uint8_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value6,  add(headStart, 192))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_7266bddff5abb545cc5c3e00df14df53c6215d4f5ec266a2b22dc0da56941b7e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not authorized.\")\n\n    }\n\n    function abi_encode_t_stringliteral_7266bddff5abb545cc5c3e00df14df53c6215d4f5ec266a2b22dc0da56941b7e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_7266bddff5abb545cc5c3e00df14df53c6215d4f5ec266a2b22dc0da56941b7e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7266bddff5abb545cc5c3e00df14df53c6215d4f5ec266a2b22dc0da56941b7e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7266bddff5abb545cc5c3e00df14df53c6215d4f5ec266a2b22dc0da56941b7e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 10,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "259:5366:9:-:0;;;2606:66;;;;;;;;;;2634:10;2626:5;;:18;;;;;;;;;;;;;;;;;;2666:1;2650:13;:17;;;;259:5366;;;;;;",
  "deployedSourceMap": "259:5366:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5318:305;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4807:146;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2889:747;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3949:105;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5080:100;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4352:102;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;344:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;413:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;557:40;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;5318:305;5527:6;5557:60;5543:75;;5318:305;;;;;;;:::o;4807:146::-;4939:4;4807:146;;;:::o;2889:747::-;2985:4;3015:17;3007:5;:25;2999:34;;;;;;3092:1;3075:13;;:18;;;;;;;:::i;:::-;;;;;;;;3187:238;;;;;;;;3214:13;;3187:238;;;;3257:12;3187:238;;;;;;3294:7;3187:238;;;;3316:5;3187:238;;;;3336:13;3187:238;;;;;;;;:::i;:::-;;;;;;3373:10;3187:238;;;;;;3415:1;3187:238;;;;;3161:8;:23;3170:13;;3161:23;;;;;;;;;;;:264;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3498:12;3491:37;;;3529:10;3549:4;3556:7;3491:73;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3576:28;3590:13;;3576:28;;;;;;:::i;:::-;;;;;;;;3617:13;;3610:20;;2889:747;;;;;:::o;3949:105::-;4040:4;4017:9;1890:10;1860:40;;:8;:19;1869:9;1860:19;;;;;;;;;;;:26;;;;;;;;;;;;:40;;;1851:50;;;;;;3949:105;;;;:::o;5080:100::-;5164:4;1696:5;;;;;;;;;;;1682:19;;:10;:19;;;1674:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;5080:100;;;:::o;4352:102::-;4440:4;4417:9;1890:10;1860:40;;:8;:19;1869:9;1860:19;;;;;;;;;;;:26;;;;;;;;;;;;:40;;;1851:50;;;;;;4352:102;;;;:::o;344:20::-;;;;;;;;;;;;:::o;413:25::-;;;;:::o;557:40::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;88:117:10:-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:117::-;1306:1;1303;1296:12;1320:117;1429:1;1426;1419:12;1443:117;1552:1;1549;1542:12;1579:552;1636:8;1646:6;1696:3;1689:4;1681:6;1677:17;1673:27;1663:122;;1704:79;;:::i;:::-;1663:122;1817:6;1804:20;1794:30;;1847:18;1839:6;1836:30;1833:117;;;1869:79;;:::i;:::-;1833:117;1983:4;1975:6;1971:17;1959:29;;2037:3;2029:4;2021:6;2017:17;2007:8;2003:32;2000:41;1997:128;;;2044:79;;:::i;:::-;1997:128;1579:552;;;;;:::o;2137:963::-;2234:6;2242;2250;2258;2266;2315:3;2303:9;2294:7;2290:23;2286:33;2283:120;;;2322:79;;:::i;:::-;2283:120;2442:1;2467:53;2512:7;2503:6;2492:9;2488:22;2467:53;:::i;:::-;2457:63;;2413:117;2569:2;2595:53;2640:7;2631:6;2620:9;2616:22;2595:53;:::i;:::-;2585:63;;2540:118;2697:2;2723:53;2768:7;2759:6;2748:9;2744:22;2723:53;:::i;:::-;2713:63;;2668:118;2853:2;2842:9;2838:18;2825:32;2884:18;2876:6;2873:30;2870:117;;;2906:79;;:::i;:::-;2870:117;3019:64;3075:7;3066:6;3055:9;3051:22;3019:64;:::i;:::-;3001:82;;;;2796:297;2137:963;;;;;;;;:::o;3106:149::-;3142:7;3182:66;3175:5;3171:78;3160:89;;3106:149;;;:::o;3261:115::-;3346:23;3363:5;3346:23;:::i;:::-;3341:3;3334:36;3261:115;;:::o;3382:218::-;3473:4;3511:2;3500:9;3496:18;3488:26;;3524:69;3590:1;3579:9;3575:17;3566:6;3524:69;:::i;:::-;3382:218;;;;:::o;3606:329::-;3665:6;3714:2;3702:9;3693:7;3689:23;3685:32;3682:119;;;3720:79;;:::i;:::-;3682:119;3840:1;3865:53;3910:7;3901:6;3890:9;3886:22;3865:53;:::i;:::-;3855:63;;3811:117;3606:329;;;;:::o;3941:90::-;3975:7;4018:5;4011:13;4004:21;3993:32;;3941:90;;;:::o;4037:109::-;4118:21;4133:5;4118:21;:::i;:::-;4113:3;4106:34;4037:109;;:::o;4152:210::-;4239:4;4277:2;4266:9;4262:18;4254:26;;4290:65;4352:1;4341:9;4337:17;4328:6;4290:65;:::i;:::-;4152:210;;;;:::o;4368:619::-;4445:6;4453;4461;4510:2;4498:9;4489:7;4485:23;4481:32;4478:119;;;4516:79;;:::i;:::-;4478:119;4636:1;4661:53;4706:7;4697:6;4686:9;4682:22;4661:53;:::i;:::-;4651:63;;4607:117;4763:2;4789:53;4834:7;4825:6;4814:9;4810:22;4789:53;:::i;:::-;4779:63;;4734:118;4891:2;4917:53;4962:7;4953:6;4942:9;4938:22;4917:53;:::i;:::-;4907:63;;4862:118;4368:619;;;;;:::o;4993:118::-;5080:24;5098:5;5080:24;:::i;:::-;5075:3;5068:37;4993:118;;:::o;5117:222::-;5210:4;5248:2;5237:9;5233:18;5225:26;;5261:71;5329:1;5318:9;5314:17;5305:6;5261:71;:::i;:::-;5117:222;;;;:::o;5345:118::-;5432:24;5450:5;5432:24;:::i;:::-;5427:3;5420:37;5345:118;;:::o;5469:222::-;5562:4;5600:2;5589:9;5585:18;5577:26;;5613:71;5681:1;5670:9;5666:17;5657:6;5613:71;:::i;:::-;5469:222;;;;:::o;5697:180::-;5745:77;5742:1;5735:88;5842:4;5839:1;5832:15;5866:4;5863:1;5856:15;5883:115;5966:1;5959:5;5956:12;5946:46;;5972:18;;:::i;:::-;5946:46;5883:115;:::o;6004:131::-;6051:7;6080:5;6069:16;;6086:43;6123:5;6086:43;:::i;:::-;6004:131;;;:::o;6141:::-;6199:9;6232:34;6260:5;6232:34;:::i;:::-;6219:47;;6141:131;;;:::o;6278:147::-;6373:45;6412:5;6373:45;:::i;:::-;6368:3;6361:58;6278:147;;:::o;6431:104::-;6476:7;6505:24;6523:5;6505:24;:::i;:::-;6494:35;;6431:104;;;:::o;6541:142::-;6644:32;6670:5;6644:32;:::i;:::-;6639:3;6632:45;6541:142;;:::o;6689:966::-;6990:4;7028:3;7017:9;7013:19;7005:27;;7042:71;7110:1;7099:9;7095:17;7086:6;7042:71;:::i;:::-;7123:72;7191:2;7180:9;7176:18;7167:6;7123:72;:::i;:::-;7205;7273:2;7262:9;7258:18;7249:6;7205:72;:::i;:::-;7287;7355:2;7344:9;7340:18;7331:6;7287:72;:::i;:::-;7369:81;7445:3;7434:9;7430:19;7421:6;7369:81;:::i;:::-;7460:89;7544:3;7533:9;7529:19;7520:6;7460:89;:::i;:::-;7559;7643:3;7632:9;7628:19;7619:6;7559:89;:::i;:::-;6689:966;;;;;;;;;;:::o;7661:180::-;7709:77;7706:1;7699:88;7806:4;7803:1;7796:15;7830:4;7827:1;7820:15;7847:305;7887:3;7906:20;7924:1;7906:20;:::i;:::-;7901:25;;7940:20;7958:1;7940:20;:::i;:::-;7935:25;;8094:1;8026:66;8022:74;8019:1;8016:81;8013:107;;;8100:18;;:::i;:::-;8013:107;8144:1;8141;8137:9;8130:16;;7847:305;;;;:::o;8158:442::-;8307:4;8345:2;8334:9;8330:18;8322:26;;8358:71;8426:1;8415:9;8411:17;8402:6;8358:71;:::i;:::-;8439:72;8507:2;8496:9;8492:18;8483:6;8439:72;:::i;:::-;8521;8589:2;8578:9;8574:18;8565:6;8521:72;:::i;:::-;8158:442;;;;;;:::o;8606:169::-;8690:11;8724:6;8719:3;8712:19;8764:4;8759:3;8755:14;8740:29;;8606:169;;;;:::o;8781:165::-;8921:17;8917:1;8909:6;8905:14;8898:41;8781:165;:::o;8952:366::-;9094:3;9115:67;9179:2;9174:3;9115:67;:::i;:::-;9108:74;;9191:93;9280:3;9191:93;:::i;:::-;9309:2;9304:3;9300:12;9293:19;;8952:366;;;:::o;9324:419::-;9490:4;9528:2;9517:9;9513:18;9505:26;;9577:9;9571:4;9567:20;9563:1;9552:9;9548:17;9541:47;9605:131;9731:4;9605:131;:::i;:::-;9597:139;;9324:419;;;:::o",
  "source": "/// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\n\n/// @title A smart contract to enable buying and selling of ERC721 tokens\n/// @author @kevsherman\n/// @notice Still a WIP, demo purposes only\ncontract MetaMarket is IERC721Receiver {\n  \n  /// Owner set when contract deployed\n  address public owner;\n  \n  /// Count of the total listings created\n  uint public totalListings;\n\n  /// The state of the Listing\n  enum State { ForSale, Sold, Cancelled }\n\n  /// Mapping from listingId to Listing\n  mapping(uint => Listing) public listings;\n\n  /// Struct of the Listing object, to store who is selling/buying what \n  struct Listing {\n    uint listingId;\n    address tokenContractAddress;\n    uint tokenContractId;\n    uint price;\n    State state;\n    address payable seller;\n    address payable buyer;\n  }\n\n  /* \n   * Events\n   */\n\n  /// @notice Event to be emitted when a new Listing has been created\n  /// @return the listing id for the created Listing\n  event LogNewListing(uint listingId);\n\n  /// @notice Event to be emitted when a Listing has been updated\n  /// @return the listing id for the updated Listing\n  event LogUpdatedListing(uint listingId);\n\n  /// @notice Event to be emitted when a Listing has been removed\n  /// @return the listing id for the removed Listing\n  event LogRemovedListing(uint listingId);\n\n  /// @notice Event emitted when a Listing has been updated\n  /// @return the listing id for the updated Listing\n  event LogSoldListing(uint listingId);\n\n  /* \n   * Modifiers\n   */\n\n  /// @notice Modifer to ensure that only the contract owner can execute a function\n  modifier onlyOwner() {\n    require(msg.sender == owner, \"Not authorized.\");\n      _;\n  }\n\n  /// @notice Modifier to ensure that the msg.sender is the seller \n  modifier ensureSeller(uint listingId) {\n    require (listings[listingId].seller == msg.sender);\n    _;\n  }\n\n  /// @notice Modifier to ensure that the buyer has supplied enough ETH for the transaction\n  /// @dev Purchasing functionality not yet built\n  modifier paidEnough(uint listingId) {\n    //require (msg.value >= listings[listingId].price)\n    _;\n  }\n\n  /// @notice Modifier to be called after a purchase transaction to return excess funds\n  /// @dev Purchasing functionality not yet built\n  modifier returnExcess(uint listingId) {\n    _;\n    // uint _price = listings[listingId].price;\n    // uint amountToRefund = msg.value - _price;\n    // listings[listingId].buyer.transfer(amountToRefund);\n  }\n\n  /// @notice Initializes the contract by setting the owner and the totalListings variable.\n  constructor() {\n    owner = msg.sender;\n    totalListings = 0;\n  }\n\n  /// @notice Allow a seller to list an NFT for sale, transfer the token to the MetaMarket address\n  /// @dev The safeTransferFrom() handles ensuring ownership and approvals, so they aren't included as modifiers.\n  function createListing(address tokenAddress, uint tokenId, uint price) \n    public \n    returns(uint)\n  {\n    require(price < type(uint256).max); //Protect against overflow attacks\n\n    totalListings += 1; //Newly updated total count acts as unique ID for new listing\n    listings[totalListings] = Listing({\n      listingId: totalListings,\n      tokenContractAddress: tokenAddress,\n      tokenContractId: tokenId,\n      price: price,\n      state: State.ForSale,\n      seller: payable(msg.sender),\n      buyer: payable(address(0))\n    });\n\n    //Transfer the NFT to the MetaMarket contract address.\n    ERC721(tokenAddress).safeTransferFrom(msg.sender, address(this), tokenId);\n\n    emit LogNewListing(totalListings);\n    return totalListings; \n  }\n\n  /// @notice Allow a seller to remove the listing and get the token back from the MetaMarket address\n  /// @dev To Do:\n  ///      1. validate that msg.sender is the seller\n  ///      2. mark the item as 'cancelled'\n  ///      3. emit a LogRemovedListing event\n  ///      4. Return a bool for success/failure\n  function removeListing(uint listingId) \n    public\n    ensureSeller(listingId)\n    returns(bool)\n  {\n\n  }\n\n  /// @notice Allow a seller to update the listing price\n  /// @dev To Do:\n  ///      1. validate it is the seller attempting to update the listing\n  ///      2. validate that msg.sender is the seller\n  ///      3. emit a LogUpdatedListing event\n  ///      4. Return a bool for success/failure\n  function updatePrice(uint listingId)\n    public\n    ensureSeller(listingId)\n    returns(bool)\n  {\n\n  }\n\n\n  /// @notice Allow a buyer to update the listing price\n  /// @dev To Do: \n  ///        1. validate the transaction has sufficient eth\n  ///        2. transfer eth to seller\n  ///        3. transfer nft to buyer\n  ///        4. mark listing as Sold\n  ///        5. return any excess funds to buyer\n  ///        6. return a bool for success/failure\n  function purchaseListing(uint listingId) \n    public \n    payable\n    paidEnough(listingId)\n    returnExcess(listingId)\n    returns(bool)\n  {\n\n  } \n\n  /// @notice Allow the contract owner to withdraw accrued fees\n  /// @dev To Do: No fees currently collected to withdraw\n  function withdrawFees(uint amount)\n    public\n    payable\n    onlyOwner\n    returns(bool)  \n  {\n\n  }\n\n  /// @notice Override function to allow for recieving ERC721 tokens\n  /// @dev Figure out how to remove warning re: unused variables\n  function onERC721Received(\n    /* solhint-disable */\n      address operator,\n      address from,\n      uint256 tokenId,\n      bytes calldata data\n    /* solhint-enable */\n    ) external pure override returns (bytes4) {\n      return bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"));\n  }\n}\n",
  "sourcePath": "/Users/kevinshouse/Projects/BlockchainBootcamp/blockchain-developer-bootcamp-final-project/contracts/MetaMarket.sol",
  "ast": {
    "absolutePath": "project:/contracts/MetaMarket.sol",
    "exportedSymbols": {
      "Address": [
        1273
      ],
      "Context": [
        1295
      ],
      "ERC165": [
        1522
      ],
      "ERC721": [
        815
      ],
      "IERC165": [
        1534
      ],
      "IERC721": [
        931
      ],
      "IERC721Metadata": [
        976
      ],
      "IERC721Receiver": [
        949
      ],
      "MetaMarket": [
        1795
      ],
      "Strings": [
        1498
      ]
    },
    "id": 1796,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1536,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:9"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 1537,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1796,
        "sourceUnit": 816,
        "src": "58:57:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1539,
              "name": "IERC721Receiver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 949,
              "src": "282:15:9"
            },
            "id": 1540,
            "nodeType": "InheritanceSpecifier",
            "src": "282:15:9"
          }
        ],
        "canonicalName": "MetaMarket",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1538,
          "nodeType": "StructuredDocumentation",
          "src": "117:142:9",
          "text": "@title A smart contract to enable buying and selling of ERC721 tokens\n @author @kevsherman\n @notice Still a WIP, demo purposes only"
        },
        "fullyImplemented": true,
        "id": 1795,
        "linearizedBaseContracts": [
          1795,
          949
        ],
        "name": "MetaMarket",
        "nameLocation": "268:10:9",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 1541,
              "nodeType": "StructuredDocumentation",
              "src": "305:36:9",
              "text": "Owner set when contract deployed"
            },
            "functionSelector": "8da5cb5b",
            "id": 1543,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "359:5:9",
            "nodeType": "VariableDeclaration",
            "scope": 1795,
            "src": "344:20:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1542,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "344:7:9",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1544,
              "nodeType": "StructuredDocumentation",
              "src": "371:39:9",
              "text": "Count of the total listings created"
            },
            "functionSelector": "c78b616c",
            "id": 1546,
            "mutability": "mutable",
            "name": "totalListings",
            "nameLocation": "425:13:9",
            "nodeType": "VariableDeclaration",
            "scope": 1795,
            "src": "413:25:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1545,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "413:4:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "MetaMarket.State",
            "id": 1550,
            "members": [
              {
                "id": 1547,
                "name": "ForSale",
                "nameLocation": "487:7:9",
                "nodeType": "EnumValue",
                "src": "487:7:9"
              },
              {
                "id": 1548,
                "name": "Sold",
                "nameLocation": "496:4:9",
                "nodeType": "EnumValue",
                "src": "496:4:9"
              },
              {
                "id": 1549,
                "name": "Cancelled",
                "nameLocation": "502:9:9",
                "nodeType": "EnumValue",
                "src": "502:9:9"
              }
            ],
            "name": "State",
            "nameLocation": "479:5:9",
            "nodeType": "EnumDefinition",
            "src": "474:39:9"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1551,
              "nodeType": "StructuredDocumentation",
              "src": "517:37:9",
              "text": "Mapping from listingId to Listing"
            },
            "functionSelector": "de74e57b",
            "id": 1556,
            "mutability": "mutable",
            "name": "listings",
            "nameLocation": "589:8:9",
            "nodeType": "VariableDeclaration",
            "scope": 1795,
            "src": "557:40:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Listing_$1572_storage_$",
              "typeString": "mapping(uint256 => struct MetaMarket.Listing)"
            },
            "typeName": {
              "id": 1555,
              "keyType": {
                "id": 1552,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "565:4:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "557:24:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Listing_$1572_storage_$",
                "typeString": "mapping(uint256 => struct MetaMarket.Listing)"
              },
              "valueType": {
                "id": 1554,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1553,
                  "name": "Listing",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1572,
                  "src": "573:7:9"
                },
                "referencedDeclaration": 1572,
                "src": "573:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Listing_$1572_storage_ptr",
                  "typeString": "struct MetaMarket.Listing"
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "MetaMarket.Listing",
            "id": 1572,
            "members": [
              {
                "constant": false,
                "id": 1558,
                "mutability": "mutable",
                "name": "listingId",
                "nameLocation": "701:9:9",
                "nodeType": "VariableDeclaration",
                "scope": 1572,
                "src": "696:14:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1557,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "696:4:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1560,
                "mutability": "mutable",
                "name": "tokenContractAddress",
                "nameLocation": "724:20:9",
                "nodeType": "VariableDeclaration",
                "scope": 1572,
                "src": "716:28:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1559,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "716:7:9",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1562,
                "mutability": "mutable",
                "name": "tokenContractId",
                "nameLocation": "755:15:9",
                "nodeType": "VariableDeclaration",
                "scope": 1572,
                "src": "750:20:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1561,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "750:4:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1564,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "781:5:9",
                "nodeType": "VariableDeclaration",
                "scope": 1572,
                "src": "776:10:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1563,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "776:4:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1567,
                "mutability": "mutable",
                "name": "state",
                "nameLocation": "798:5:9",
                "nodeType": "VariableDeclaration",
                "scope": 1572,
                "src": "792:11:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_State_$1550",
                  "typeString": "enum MetaMarket.State"
                },
                "typeName": {
                  "id": 1566,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 1565,
                    "name": "State",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1550,
                    "src": "792:5:9"
                  },
                  "referencedDeclaration": 1550,
                  "src": "792:5:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$1550",
                    "typeString": "enum MetaMarket.State"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1569,
                "mutability": "mutable",
                "name": "seller",
                "nameLocation": "825:6:9",
                "nodeType": "VariableDeclaration",
                "scope": 1572,
                "src": "809:22:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 1568,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "809:15:9",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1571,
                "mutability": "mutable",
                "name": "buyer",
                "nameLocation": "853:5:9",
                "nodeType": "VariableDeclaration",
                "scope": 1572,
                "src": "837:21:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 1570,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "837:15:9",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Listing",
            "nameLocation": "682:7:9",
            "nodeType": "StructDefinition",
            "scope": 1795,
            "src": "675:188:9",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1573,
              "nodeType": "StructuredDocumentation",
              "src": "892:120:9",
              "text": "@notice Event to be emitted when a new Listing has been created\n @return the listing id for the created Listing"
            },
            "id": 1577,
            "name": "LogNewListing",
            "nameLocation": "1021:13:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1575,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "listingId",
                  "nameLocation": "1040:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1577,
                  "src": "1035:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1574,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1035:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1034:16:9"
            },
            "src": "1015:36:9"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1578,
              "nodeType": "StructuredDocumentation",
              "src": "1055:116:9",
              "text": "@notice Event to be emitted when a Listing has been updated\n @return the listing id for the updated Listing"
            },
            "id": 1582,
            "name": "LogUpdatedListing",
            "nameLocation": "1180:17:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1581,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1580,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "listingId",
                  "nameLocation": "1203:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1582,
                  "src": "1198:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1579,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1198:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1197:16:9"
            },
            "src": "1174:40:9"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1583,
              "nodeType": "StructuredDocumentation",
              "src": "1218:116:9",
              "text": "@notice Event to be emitted when a Listing has been removed\n @return the listing id for the removed Listing"
            },
            "id": 1587,
            "name": "LogRemovedListing",
            "nameLocation": "1343:17:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1586,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1585,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "listingId",
                  "nameLocation": "1366:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1587,
                  "src": "1361:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1584,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1361:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1360:16:9"
            },
            "src": "1337:40:9"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1588,
              "nodeType": "StructuredDocumentation",
              "src": "1381:110:9",
              "text": "@notice Event emitted when a Listing has been updated\n @return the listing id for the updated Listing"
            },
            "id": 1592,
            "name": "LogSoldListing",
            "nameLocation": "1500:14:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1591,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1590,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "listingId",
                  "nameLocation": "1520:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1592,
                  "src": "1515:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1589,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1515:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1514:16:9"
            },
            "src": "1494:37:9"
          },
          {
            "body": {
              "id": 1604,
              "nodeType": "Block",
              "src": "1668:67:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1596,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1682:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1682:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1598,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1543,
                          "src": "1696:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1682:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420617574686f72697a65642e",
                        "id": 1600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1703:17:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7266bddff5abb545cc5c3e00df14df53c6215d4f5ec266a2b22dc0da56941b7e",
                          "typeString": "literal_string \"Not authorized.\""
                        },
                        "value": "Not authorized."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7266bddff5abb545cc5c3e00df14df53c6215d4f5ec266a2b22dc0da56941b7e",
                          "typeString": "literal_string \"Not authorized.\""
                        }
                      ],
                      "id": 1595,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1674:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1674:47:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1602,
                  "nodeType": "ExpressionStatement",
                  "src": "1674:47:9"
                },
                {
                  "id": 1603,
                  "nodeType": "PlaceholderStatement",
                  "src": "1729:1:9"
                }
              ]
            },
            "documentation": {
              "id": 1593,
              "nodeType": "StructuredDocumentation",
              "src": "1563:81:9",
              "text": "@notice Modifer to ensure that only the contract owner can execute a function"
            },
            "id": 1605,
            "name": "onlyOwner",
            "nameLocation": "1656:9:9",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1594,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1665:2:9"
            },
            "src": "1647:88:9",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1621,
              "nodeType": "Block",
              "src": "1845:68:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1611,
                              "name": "listings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1556,
                              "src": "1860:8:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Listing_$1572_storage_$",
                                "typeString": "mapping(uint256 => struct MetaMarket.Listing storage ref)"
                              }
                            },
                            "id": 1613,
                            "indexExpression": {
                              "id": 1612,
                              "name": "listingId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1608,
                              "src": "1869:9:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1860:19:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Listing_$1572_storage",
                              "typeString": "struct MetaMarket.Listing storage ref"
                            }
                          },
                          "id": 1614,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1569,
                          "src": "1860:26:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1615,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1890:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1890:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1860:40:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1610,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1851:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1851:50:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1619,
                  "nodeType": "ExpressionStatement",
                  "src": "1851:50:9"
                },
                {
                  "id": 1620,
                  "nodeType": "PlaceholderStatement",
                  "src": "1907:1:9"
                }
              ]
            },
            "documentation": {
              "id": 1606,
              "nodeType": "StructuredDocumentation",
              "src": "1739:65:9",
              "text": "@notice Modifier to ensure that the msg.sender is the seller "
            },
            "id": 1622,
            "name": "ensureSeller",
            "nameLocation": "1816:12:9",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1609,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1608,
                  "mutability": "mutable",
                  "name": "listingId",
                  "nameLocation": "1834:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1622,
                  "src": "1829:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1607,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1829:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1828:16:9"
            },
            "src": "1807:106:9",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1628,
              "nodeType": "Block",
              "src": "2095:67:9",
              "statements": [
                {
                  "id": 1627,
                  "nodeType": "PlaceholderStatement",
                  "src": "2156:1:9"
                }
              ]
            },
            "documentation": {
              "id": 1623,
              "nodeType": "StructuredDocumentation",
              "src": "1917:139:9",
              "text": "@notice Modifier to ensure that the buyer has supplied enough ETH for the transaction\n @dev Purchasing functionality not yet built"
            },
            "id": 1629,
            "name": "paidEnough",
            "nameLocation": "2068:10:9",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1625,
                  "mutability": "mutable",
                  "name": "listingId",
                  "nameLocation": "2084:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1629,
                  "src": "2079:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1624,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2079:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2078:16:9"
            },
            "src": "2059:103:9",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1635,
              "nodeType": "Block",
              "src": "2342:168:9",
              "statements": [
                {
                  "id": 1634,
                  "nodeType": "PlaceholderStatement",
                  "src": "2348:1:9"
                }
              ]
            },
            "documentation": {
              "id": 1630,
              "nodeType": "StructuredDocumentation",
              "src": "2166:135:9",
              "text": "@notice Modifier to be called after a purchase transaction to return excess funds\n @dev Purchasing functionality not yet built"
            },
            "id": 1636,
            "name": "returnExcess",
            "nameLocation": "2313:12:9",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1633,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1632,
                  "mutability": "mutable",
                  "name": "listingId",
                  "nameLocation": "2331:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1636,
                  "src": "2326:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1631,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2326:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2325:16:9"
            },
            "src": "2304:206:9",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1649,
              "nodeType": "Block",
              "src": "2620:52:9",
              "statements": [
                {
                  "expression": {
                    "id": 1643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1640,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1543,
                      "src": "2626:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1641,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2634:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1642,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2634:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2626:18:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1644,
                  "nodeType": "ExpressionStatement",
                  "src": "2626:18:9"
                },
                {
                  "expression": {
                    "id": 1647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1645,
                      "name": "totalListings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1546,
                      "src": "2650:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1646,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2666:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2650:17:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1648,
                  "nodeType": "ExpressionStatement",
                  "src": "2650:17:9"
                }
              ]
            },
            "documentation": {
              "id": 1637,
              "nodeType": "StructuredDocumentation",
              "src": "2514:89:9",
              "text": "@notice Initializes the contract by setting the owner and the totalListings variable."
            },
            "id": 1650,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1638,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2617:2:9"
            },
            "returnParameters": {
              "id": 1639,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2620:0:9"
            },
            "scope": 1795,
            "src": "2606:66:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1720,
              "nodeType": "Block",
              "src": "2993:643:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1663,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1657,
                          "src": "3007:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1666,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3020:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 1665,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3020:7:9",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                }
                              ],
                              "id": 1664,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967269,
                              "src": "3015:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 1667,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3015:13:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint256",
                              "typeString": "type(uint256)"
                            }
                          },
                          "id": 1668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "3015:17:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3007:25:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1662,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2999:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2999:34:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1671,
                  "nodeType": "ExpressionStatement",
                  "src": "2999:34:9"
                },
                {
                  "expression": {
                    "id": 1674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1672,
                      "name": "totalListings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1546,
                      "src": "3075:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1673,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3092:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3075:18:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1675,
                  "nodeType": "ExpressionStatement",
                  "src": "3075:18:9"
                },
                {
                  "expression": {
                    "id": 1699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1676,
                        "name": "listings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1556,
                        "src": "3161:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Listing_$1572_storage_$",
                          "typeString": "mapping(uint256 => struct MetaMarket.Listing storage ref)"
                        }
                      },
                      "id": 1678,
                      "indexExpression": {
                        "id": 1677,
                        "name": "totalListings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1546,
                        "src": "3170:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3161:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Listing_$1572_storage",
                        "typeString": "struct MetaMarket.Listing storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1680,
                          "name": "totalListings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1546,
                          "src": "3214:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1681,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1653,
                          "src": "3257:12:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1682,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1655,
                          "src": "3294:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1683,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1657,
                          "src": "3316:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 1684,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1550,
                            "src": "3336:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$1550_$",
                              "typeString": "type(enum MetaMarket.State)"
                            }
                          },
                          "id": 1685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "ForSale",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1547,
                          "src": "3336:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$1550",
                            "typeString": "enum MetaMarket.State"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1688,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3373:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1689,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3373:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1687,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3365:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 1686,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3365:8:9",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3365:19:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1695,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3415:1:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1694,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3407:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1693,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3407:7:9",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1696,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3407:10:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1692,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3399:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 1691,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3399:8:9",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3399:19:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_enum$_State_$1550",
                            "typeString": "enum MetaMarket.State"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 1679,
                        "name": "Listing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1572,
                        "src": "3187:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Listing_$1572_storage_ptr_$",
                          "typeString": "type(struct MetaMarket.Listing storage pointer)"
                        }
                      },
                      "id": 1698,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "listingId",
                        "tokenContractAddress",
                        "tokenContractId",
                        "price",
                        "state",
                        "seller",
                        "buyer"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3187:238:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Listing_$1572_memory_ptr",
                        "typeString": "struct MetaMarket.Listing memory"
                      }
                    },
                    "src": "3161:264:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Listing_$1572_storage",
                      "typeString": "struct MetaMarket.Listing storage ref"
                    }
                  },
                  "id": 1700,
                  "nodeType": "ExpressionStatement",
                  "src": "3161:264:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1705,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3529:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3529:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1709,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3549:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MetaMarket_$1795",
                              "typeString": "contract MetaMarket"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MetaMarket_$1795",
                              "typeString": "contract MetaMarket"
                            }
                          ],
                          "id": 1708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3541:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1707,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3541:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3541:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1711,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1655,
                        "src": "3556:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1702,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1653,
                            "src": "3498:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1701,
                          "name": "ERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 815,
                          "src": "3491:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC721_$815_$",
                            "typeString": "type(contract ERC721)"
                          }
                        },
                        "id": 1703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3491:20:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$815",
                          "typeString": "contract ERC721"
                        }
                      },
                      "id": 1704,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 378,
                      "src": "3491:37:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 1712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3491:73:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1713,
                  "nodeType": "ExpressionStatement",
                  "src": "3491:73:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1715,
                        "name": "totalListings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1546,
                        "src": "3590:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1714,
                      "name": "LogNewListing",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1577,
                      "src": "3576:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3576:28:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1717,
                  "nodeType": "EmitStatement",
                  "src": "3571:33:9"
                },
                {
                  "expression": {
                    "id": 1718,
                    "name": "totalListings",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1546,
                    "src": "3617:13:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1661,
                  "id": 1719,
                  "nodeType": "Return",
                  "src": "3610:20:9"
                }
              ]
            },
            "documentation": {
              "id": 1651,
              "nodeType": "StructuredDocumentation",
              "src": "2676:210:9",
              "text": "@notice Allow a seller to list an NFT for sale, transfer the token to the MetaMarket address\n @dev The safeTransferFrom() handles ensuring ownership and approvals, so they aren't included as modifiers."
            },
            "functionSelector": "24780c56",
            "id": 1721,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createListing",
            "nameLocation": "2898:13:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1658,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1653,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "2920:12:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1721,
                  "src": "2912:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1652,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2912:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1655,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2939:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1721,
                  "src": "2934:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1654,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2934:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1657,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "2953:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1721,
                  "src": "2948:10:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1656,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2948:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2911:48:9"
            },
            "returnParameters": {
              "id": 1661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1660,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1721,
                  "src": "2985:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1659,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2985:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2984:6:9"
            },
            "scope": 1795,
            "src": "2889:747:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1732,
              "nodeType": "Block",
              "src": "4048:6:9",
              "statements": []
            },
            "documentation": {
              "id": 1722,
              "nodeType": "StructuredDocumentation",
              "src": "3640:306:9",
              "text": "@notice Allow a seller to remove the listing and get the token back from the MetaMarket address\n @dev To Do:\n      1. validate that msg.sender is the seller\n      2. mark the item as 'cancelled'\n      3. emit a LogRemovedListing event\n      4. Return a bool for success/failure"
            },
            "functionSelector": "479ad4c3",
            "id": 1733,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1727,
                    "name": "listingId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1724,
                    "src": "4017:9:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1728,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1726,
                  "name": "ensureSeller",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1622,
                  "src": "4004:12:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "4004:23:9"
              }
            ],
            "name": "removeListing",
            "nameLocation": "3958:13:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1725,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1724,
                  "mutability": "mutable",
                  "name": "listingId",
                  "nameLocation": "3977:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1733,
                  "src": "3972:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1723,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3972:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3971:16:9"
            },
            "returnParameters": {
              "id": 1731,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1730,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1733,
                  "src": "4040:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1729,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4040:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4039:6:9"
            },
            "scope": 1795,
            "src": "3949:105:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1744,
              "nodeType": "Block",
              "src": "4448:6:9",
              "statements": []
            },
            "documentation": {
              "id": 1734,
              "nodeType": "StructuredDocumentation",
              "src": "4058:291:9",
              "text": "@notice Allow a seller to update the listing price\n @dev To Do:\n      1. validate it is the seller attempting to update the listing\n      2. validate that msg.sender is the seller\n      3. emit a LogUpdatedListing event\n      4. Return a bool for success/failure"
            },
            "functionSelector": "8d6cc56d",
            "id": 1745,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1739,
                    "name": "listingId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1736,
                    "src": "4417:9:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1740,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1738,
                  "name": "ensureSeller",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1622,
                  "src": "4404:12:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "4404:23:9"
              }
            ],
            "name": "updatePrice",
            "nameLocation": "4361:11:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1737,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1736,
                  "mutability": "mutable",
                  "name": "listingId",
                  "nameLocation": "4378:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1745,
                  "src": "4373:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1735,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4373:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4372:16:9"
            },
            "returnParameters": {
              "id": 1743,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1742,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1745,
                  "src": "4440:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1741,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4440:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4439:6:9"
            },
            "scope": 1795,
            "src": "4352:102:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1759,
              "nodeType": "Block",
              "src": "4947:6:9",
              "statements": []
            },
            "documentation": {
              "id": 1746,
              "nodeType": "StructuredDocumentation",
              "src": "4459:345:9",
              "text": "@notice Allow a buyer to update the listing price\n @dev To Do: \n        1. validate the transaction has sufficient eth\n        2. transfer eth to seller\n        3. transfer nft to buyer\n        4. mark listing as Sold\n        5. return any excess funds to buyer\n        6. return a bool for success/failure"
            },
            "functionSelector": "169d5a7d",
            "id": 1760,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1751,
                    "name": "listingId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1748,
                    "src": "4888:9:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1752,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1750,
                  "name": "paidEnough",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1629,
                  "src": "4877:10:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "4877:21:9"
              },
              {
                "arguments": [
                  {
                    "id": 1754,
                    "name": "listingId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1748,
                    "src": "4916:9:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1755,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1753,
                  "name": "returnExcess",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1636,
                  "src": "4903:12:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "4903:23:9"
              }
            ],
            "name": "purchaseListing",
            "nameLocation": "4816:15:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1749,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1748,
                  "mutability": "mutable",
                  "name": "listingId",
                  "nameLocation": "4837:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1760,
                  "src": "4832:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1747,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4832:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4831:16:9"
            },
            "returnParameters": {
              "id": 1758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1757,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1760,
                  "src": "4939:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1756,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4939:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4938:6:9"
            },
            "scope": 1795,
            "src": "4807:146:9",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1770,
              "nodeType": "Block",
              "src": "5174:6:9",
              "statements": []
            },
            "documentation": {
              "id": 1761,
              "nodeType": "StructuredDocumentation",
              "src": "4958:119:9",
              "text": "@notice Allow the contract owner to withdraw accrued fees\n @dev To Do: No fees currently collected to withdraw"
            },
            "functionSelector": "5e318e07",
            "id": 1771,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1766,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1765,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1605,
                  "src": "5142:9:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "5142:9:9"
              }
            ],
            "name": "withdrawFees",
            "nameLocation": "5089:12:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1763,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5107:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1771,
                  "src": "5102:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1762,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5102:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5101:13:9"
            },
            "returnParameters": {
              "id": 1769,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1768,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1771,
                  "src": "5164:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1767,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5164:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5163:6:9"
            },
            "scope": 1795,
            "src": "5080:100:9",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              948
            ],
            "body": {
              "id": 1793,
              "nodeType": "Block",
              "src": "5535:88:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "6f6e455243373231526563656976656428616464726573732c616464726573732c75696e743235362c627974657329",
                            "id": 1789,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5567:49:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_150b7a023d4804d13e8c85fb27262cb750cf6ba9f9dd3bb30d90f482ceeb4b1f",
                              "typeString": "literal_string \"onERC721Received(address,address,uint256,bytes)\""
                            },
                            "value": "onERC721Received(address,address,uint256,bytes)"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_150b7a023d4804d13e8c85fb27262cb750cf6ba9f9dd3bb30d90f482ceeb4b1f",
                              "typeString": "literal_string \"onERC721Received(address,address,uint256,bytes)\""
                            }
                          ],
                          "id": 1788,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967288,
                          "src": "5557:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 1790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5557:60:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1787,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5550:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes4_$",
                        "typeString": "type(bytes4)"
                      },
                      "typeName": {
                        "id": 1786,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "5550:6:9",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5550:68:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 1785,
                  "id": 1792,
                  "nodeType": "Return",
                  "src": "5543:75:9"
                }
              ]
            },
            "documentation": {
              "id": 1772,
              "nodeType": "StructuredDocumentation",
              "src": "5184:131:9",
              "text": "@notice Override function to allow for recieving ERC721 tokens\n @dev Figure out how to remove warning re: unused variables"
            },
            "functionSelector": "150b7a02",
            "id": 1794,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nameLocation": "5327:16:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1782,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5509:8:9"
            },
            "parameters": {
              "id": 1781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1774,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "5385:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1794,
                  "src": "5377:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1773,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5377:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1776,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5409:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1794,
                  "src": "5401:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1775,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5401:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1778,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5429:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1794,
                  "src": "5421:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1777,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5421:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1780,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "5459:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1794,
                  "src": "5444:19:9",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1779,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5444:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5343:151:9"
            },
            "returnParameters": {
              "id": 1785,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1784,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1794,
                  "src": "5527:6:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 1783,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "5527:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5526:8:9"
            },
            "scope": 1795,
            "src": "5318:305:9",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1796,
        "src": "259:5366:9",
        "usedErrors": []
      }
    ],
    "src": "33:5593:9"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/MetaMarket.sol",
    "exportedSymbols": {
      "Address": [
        1273
      ],
      "Context": [
        1295
      ],
      "ERC165": [
        1522
      ],
      "ERC721": [
        815
      ],
      "IERC165": [
        1534
      ],
      "IERC721": [
        931
      ],
      "IERC721Metadata": [
        976
      ],
      "IERC721Receiver": [
        949
      ],
      "MetaMarket": [
        1795
      ],
      "Strings": [
        1498
      ]
    },
    "id": 1796,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1536,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:9"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 1537,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1796,
        "sourceUnit": 816,
        "src": "58:57:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1539,
              "name": "IERC721Receiver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 949,
              "src": "282:15:9"
            },
            "id": 1540,
            "nodeType": "InheritanceSpecifier",
            "src": "282:15:9"
          }
        ],
        "canonicalName": "MetaMarket",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1538,
          "nodeType": "StructuredDocumentation",
          "src": "117:142:9",
          "text": "@title A smart contract to enable buying and selling of ERC721 tokens\n @author @kevsherman\n @notice Still a WIP, demo purposes only"
        },
        "fullyImplemented": true,
        "id": 1795,
        "linearizedBaseContracts": [
          1795,
          949
        ],
        "name": "MetaMarket",
        "nameLocation": "268:10:9",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 1541,
              "nodeType": "StructuredDocumentation",
              "src": "305:36:9",
              "text": "Owner set when contract deployed"
            },
            "functionSelector": "8da5cb5b",
            "id": 1543,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "359:5:9",
            "nodeType": "VariableDeclaration",
            "scope": 1795,
            "src": "344:20:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1542,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "344:7:9",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1544,
              "nodeType": "StructuredDocumentation",
              "src": "371:39:9",
              "text": "Count of the total listings created"
            },
            "functionSelector": "c78b616c",
            "id": 1546,
            "mutability": "mutable",
            "name": "totalListings",
            "nameLocation": "425:13:9",
            "nodeType": "VariableDeclaration",
            "scope": 1795,
            "src": "413:25:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1545,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "413:4:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "MetaMarket.State",
            "id": 1550,
            "members": [
              {
                "id": 1547,
                "name": "ForSale",
                "nameLocation": "487:7:9",
                "nodeType": "EnumValue",
                "src": "487:7:9"
              },
              {
                "id": 1548,
                "name": "Sold",
                "nameLocation": "496:4:9",
                "nodeType": "EnumValue",
                "src": "496:4:9"
              },
              {
                "id": 1549,
                "name": "Cancelled",
                "nameLocation": "502:9:9",
                "nodeType": "EnumValue",
                "src": "502:9:9"
              }
            ],
            "name": "State",
            "nameLocation": "479:5:9",
            "nodeType": "EnumDefinition",
            "src": "474:39:9"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1551,
              "nodeType": "StructuredDocumentation",
              "src": "517:37:9",
              "text": "Mapping from listingId to Listing"
            },
            "functionSelector": "de74e57b",
            "id": 1556,
            "mutability": "mutable",
            "name": "listings",
            "nameLocation": "589:8:9",
            "nodeType": "VariableDeclaration",
            "scope": 1795,
            "src": "557:40:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Listing_$1572_storage_$",
              "typeString": "mapping(uint256 => struct MetaMarket.Listing)"
            },
            "typeName": {
              "id": 1555,
              "keyType": {
                "id": 1552,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "565:4:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "557:24:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Listing_$1572_storage_$",
                "typeString": "mapping(uint256 => struct MetaMarket.Listing)"
              },
              "valueType": {
                "id": 1554,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1553,
                  "name": "Listing",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1572,
                  "src": "573:7:9"
                },
                "referencedDeclaration": 1572,
                "src": "573:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Listing_$1572_storage_ptr",
                  "typeString": "struct MetaMarket.Listing"
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "MetaMarket.Listing",
            "id": 1572,
            "members": [
              {
                "constant": false,
                "id": 1558,
                "mutability": "mutable",
                "name": "listingId",
                "nameLocation": "701:9:9",
                "nodeType": "VariableDeclaration",
                "scope": 1572,
                "src": "696:14:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1557,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "696:4:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1560,
                "mutability": "mutable",
                "name": "tokenContractAddress",
                "nameLocation": "724:20:9",
                "nodeType": "VariableDeclaration",
                "scope": 1572,
                "src": "716:28:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1559,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "716:7:9",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1562,
                "mutability": "mutable",
                "name": "tokenContractId",
                "nameLocation": "755:15:9",
                "nodeType": "VariableDeclaration",
                "scope": 1572,
                "src": "750:20:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1561,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "750:4:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1564,
                "mutability": "mutable",
                "name": "price",
                "nameLocation": "781:5:9",
                "nodeType": "VariableDeclaration",
                "scope": 1572,
                "src": "776:10:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1563,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "776:4:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1567,
                "mutability": "mutable",
                "name": "state",
                "nameLocation": "798:5:9",
                "nodeType": "VariableDeclaration",
                "scope": 1572,
                "src": "792:11:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_State_$1550",
                  "typeString": "enum MetaMarket.State"
                },
                "typeName": {
                  "id": 1566,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 1565,
                    "name": "State",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1550,
                    "src": "792:5:9"
                  },
                  "referencedDeclaration": 1550,
                  "src": "792:5:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$1550",
                    "typeString": "enum MetaMarket.State"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1569,
                "mutability": "mutable",
                "name": "seller",
                "nameLocation": "825:6:9",
                "nodeType": "VariableDeclaration",
                "scope": 1572,
                "src": "809:22:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 1568,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "809:15:9",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1571,
                "mutability": "mutable",
                "name": "buyer",
                "nameLocation": "853:5:9",
                "nodeType": "VariableDeclaration",
                "scope": 1572,
                "src": "837:21:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 1570,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "837:15:9",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Listing",
            "nameLocation": "682:7:9",
            "nodeType": "StructDefinition",
            "scope": 1795,
            "src": "675:188:9",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1573,
              "nodeType": "StructuredDocumentation",
              "src": "892:120:9",
              "text": "@notice Event to be emitted when a new Listing has been created\n @return the listing id for the created Listing"
            },
            "id": 1577,
            "name": "LogNewListing",
            "nameLocation": "1021:13:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1575,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "listingId",
                  "nameLocation": "1040:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1577,
                  "src": "1035:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1574,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1035:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1034:16:9"
            },
            "src": "1015:36:9"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1578,
              "nodeType": "StructuredDocumentation",
              "src": "1055:116:9",
              "text": "@notice Event to be emitted when a Listing has been updated\n @return the listing id for the updated Listing"
            },
            "id": 1582,
            "name": "LogUpdatedListing",
            "nameLocation": "1180:17:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1581,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1580,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "listingId",
                  "nameLocation": "1203:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1582,
                  "src": "1198:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1579,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1198:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1197:16:9"
            },
            "src": "1174:40:9"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1583,
              "nodeType": "StructuredDocumentation",
              "src": "1218:116:9",
              "text": "@notice Event to be emitted when a Listing has been removed\n @return the listing id for the removed Listing"
            },
            "id": 1587,
            "name": "LogRemovedListing",
            "nameLocation": "1343:17:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1586,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1585,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "listingId",
                  "nameLocation": "1366:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1587,
                  "src": "1361:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1584,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1361:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1360:16:9"
            },
            "src": "1337:40:9"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1588,
              "nodeType": "StructuredDocumentation",
              "src": "1381:110:9",
              "text": "@notice Event emitted when a Listing has been updated\n @return the listing id for the updated Listing"
            },
            "id": 1592,
            "name": "LogSoldListing",
            "nameLocation": "1500:14:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1591,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1590,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "listingId",
                  "nameLocation": "1520:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1592,
                  "src": "1515:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1589,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1515:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1514:16:9"
            },
            "src": "1494:37:9"
          },
          {
            "body": {
              "id": 1604,
              "nodeType": "Block",
              "src": "1668:67:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1596,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1682:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1682:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1598,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1543,
                          "src": "1696:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1682:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420617574686f72697a65642e",
                        "id": 1600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1703:17:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7266bddff5abb545cc5c3e00df14df53c6215d4f5ec266a2b22dc0da56941b7e",
                          "typeString": "literal_string \"Not authorized.\""
                        },
                        "value": "Not authorized."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7266bddff5abb545cc5c3e00df14df53c6215d4f5ec266a2b22dc0da56941b7e",
                          "typeString": "literal_string \"Not authorized.\""
                        }
                      ],
                      "id": 1595,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1674:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1674:47:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1602,
                  "nodeType": "ExpressionStatement",
                  "src": "1674:47:9"
                },
                {
                  "id": 1603,
                  "nodeType": "PlaceholderStatement",
                  "src": "1729:1:9"
                }
              ]
            },
            "documentation": {
              "id": 1593,
              "nodeType": "StructuredDocumentation",
              "src": "1563:81:9",
              "text": "@notice Modifer to ensure that only the contract owner can execute a function"
            },
            "id": 1605,
            "name": "onlyOwner",
            "nameLocation": "1656:9:9",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1594,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1665:2:9"
            },
            "src": "1647:88:9",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1621,
              "nodeType": "Block",
              "src": "1845:68:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1611,
                              "name": "listings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1556,
                              "src": "1860:8:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Listing_$1572_storage_$",
                                "typeString": "mapping(uint256 => struct MetaMarket.Listing storage ref)"
                              }
                            },
                            "id": 1613,
                            "indexExpression": {
                              "id": 1612,
                              "name": "listingId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1608,
                              "src": "1869:9:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1860:19:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Listing_$1572_storage",
                              "typeString": "struct MetaMarket.Listing storage ref"
                            }
                          },
                          "id": 1614,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1569,
                          "src": "1860:26:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1615,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1890:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1890:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1860:40:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1610,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1851:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1851:50:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1619,
                  "nodeType": "ExpressionStatement",
                  "src": "1851:50:9"
                },
                {
                  "id": 1620,
                  "nodeType": "PlaceholderStatement",
                  "src": "1907:1:9"
                }
              ]
            },
            "documentation": {
              "id": 1606,
              "nodeType": "StructuredDocumentation",
              "src": "1739:65:9",
              "text": "@notice Modifier to ensure that the msg.sender is the seller "
            },
            "id": 1622,
            "name": "ensureSeller",
            "nameLocation": "1816:12:9",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1609,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1608,
                  "mutability": "mutable",
                  "name": "listingId",
                  "nameLocation": "1834:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1622,
                  "src": "1829:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1607,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1829:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1828:16:9"
            },
            "src": "1807:106:9",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1628,
              "nodeType": "Block",
              "src": "2095:67:9",
              "statements": [
                {
                  "id": 1627,
                  "nodeType": "PlaceholderStatement",
                  "src": "2156:1:9"
                }
              ]
            },
            "documentation": {
              "id": 1623,
              "nodeType": "StructuredDocumentation",
              "src": "1917:139:9",
              "text": "@notice Modifier to ensure that the buyer has supplied enough ETH for the transaction\n @dev Purchasing functionality not yet built"
            },
            "id": 1629,
            "name": "paidEnough",
            "nameLocation": "2068:10:9",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1625,
                  "mutability": "mutable",
                  "name": "listingId",
                  "nameLocation": "2084:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1629,
                  "src": "2079:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1624,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2079:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2078:16:9"
            },
            "src": "2059:103:9",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1635,
              "nodeType": "Block",
              "src": "2342:168:9",
              "statements": [
                {
                  "id": 1634,
                  "nodeType": "PlaceholderStatement",
                  "src": "2348:1:9"
                }
              ]
            },
            "documentation": {
              "id": 1630,
              "nodeType": "StructuredDocumentation",
              "src": "2166:135:9",
              "text": "@notice Modifier to be called after a purchase transaction to return excess funds\n @dev Purchasing functionality not yet built"
            },
            "id": 1636,
            "name": "returnExcess",
            "nameLocation": "2313:12:9",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1633,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1632,
                  "mutability": "mutable",
                  "name": "listingId",
                  "nameLocation": "2331:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1636,
                  "src": "2326:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1631,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2326:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2325:16:9"
            },
            "src": "2304:206:9",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1649,
              "nodeType": "Block",
              "src": "2620:52:9",
              "statements": [
                {
                  "expression": {
                    "id": 1643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1640,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1543,
                      "src": "2626:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1641,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2634:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1642,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2634:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2626:18:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1644,
                  "nodeType": "ExpressionStatement",
                  "src": "2626:18:9"
                },
                {
                  "expression": {
                    "id": 1647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1645,
                      "name": "totalListings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1546,
                      "src": "2650:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1646,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2666:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2650:17:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1648,
                  "nodeType": "ExpressionStatement",
                  "src": "2650:17:9"
                }
              ]
            },
            "documentation": {
              "id": 1637,
              "nodeType": "StructuredDocumentation",
              "src": "2514:89:9",
              "text": "@notice Initializes the contract by setting the owner and the totalListings variable."
            },
            "id": 1650,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1638,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2617:2:9"
            },
            "returnParameters": {
              "id": 1639,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2620:0:9"
            },
            "scope": 1795,
            "src": "2606:66:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1720,
              "nodeType": "Block",
              "src": "2993:643:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1663,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1657,
                          "src": "3007:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1666,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3020:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 1665,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3020:7:9",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                }
                              ],
                              "id": 1664,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967269,
                              "src": "3015:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 1667,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3015:13:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint256",
                              "typeString": "type(uint256)"
                            }
                          },
                          "id": 1668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "3015:17:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3007:25:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1662,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2999:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2999:34:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1671,
                  "nodeType": "ExpressionStatement",
                  "src": "2999:34:9"
                },
                {
                  "expression": {
                    "id": 1674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1672,
                      "name": "totalListings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1546,
                      "src": "3075:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1673,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3092:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3075:18:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1675,
                  "nodeType": "ExpressionStatement",
                  "src": "3075:18:9"
                },
                {
                  "expression": {
                    "id": 1699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1676,
                        "name": "listings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1556,
                        "src": "3161:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Listing_$1572_storage_$",
                          "typeString": "mapping(uint256 => struct MetaMarket.Listing storage ref)"
                        }
                      },
                      "id": 1678,
                      "indexExpression": {
                        "id": 1677,
                        "name": "totalListings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1546,
                        "src": "3170:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3161:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Listing_$1572_storage",
                        "typeString": "struct MetaMarket.Listing storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1680,
                          "name": "totalListings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1546,
                          "src": "3214:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1681,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1653,
                          "src": "3257:12:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1682,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1655,
                          "src": "3294:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1683,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1657,
                          "src": "3316:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 1684,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1550,
                            "src": "3336:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$1550_$",
                              "typeString": "type(enum MetaMarket.State)"
                            }
                          },
                          "id": 1685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "ForSale",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1547,
                          "src": "3336:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$1550",
                            "typeString": "enum MetaMarket.State"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1688,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3373:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1689,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3373:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1687,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3365:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 1686,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3365:8:9",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3365:19:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1695,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3415:1:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1694,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3407:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1693,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3407:7:9",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1696,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3407:10:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1692,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3399:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 1691,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3399:8:9",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3399:19:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_enum$_State_$1550",
                            "typeString": "enum MetaMarket.State"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 1679,
                        "name": "Listing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1572,
                        "src": "3187:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Listing_$1572_storage_ptr_$",
                          "typeString": "type(struct MetaMarket.Listing storage pointer)"
                        }
                      },
                      "id": 1698,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "listingId",
                        "tokenContractAddress",
                        "tokenContractId",
                        "price",
                        "state",
                        "seller",
                        "buyer"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3187:238:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Listing_$1572_memory_ptr",
                        "typeString": "struct MetaMarket.Listing memory"
                      }
                    },
                    "src": "3161:264:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Listing_$1572_storage",
                      "typeString": "struct MetaMarket.Listing storage ref"
                    }
                  },
                  "id": 1700,
                  "nodeType": "ExpressionStatement",
                  "src": "3161:264:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1705,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3529:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3529:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1709,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3549:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MetaMarket_$1795",
                              "typeString": "contract MetaMarket"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MetaMarket_$1795",
                              "typeString": "contract MetaMarket"
                            }
                          ],
                          "id": 1708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3541:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1707,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3541:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3541:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1711,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1655,
                        "src": "3556:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1702,
                            "name": "tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1653,
                            "src": "3498:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1701,
                          "name": "ERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 815,
                          "src": "3491:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC721_$815_$",
                            "typeString": "type(contract ERC721)"
                          }
                        },
                        "id": 1703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3491:20:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$815",
                          "typeString": "contract ERC721"
                        }
                      },
                      "id": 1704,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 378,
                      "src": "3491:37:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 1712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3491:73:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1713,
                  "nodeType": "ExpressionStatement",
                  "src": "3491:73:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1715,
                        "name": "totalListings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1546,
                        "src": "3590:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1714,
                      "name": "LogNewListing",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1577,
                      "src": "3576:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3576:28:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1717,
                  "nodeType": "EmitStatement",
                  "src": "3571:33:9"
                },
                {
                  "expression": {
                    "id": 1718,
                    "name": "totalListings",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1546,
                    "src": "3617:13:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1661,
                  "id": 1719,
                  "nodeType": "Return",
                  "src": "3610:20:9"
                }
              ]
            },
            "documentation": {
              "id": 1651,
              "nodeType": "StructuredDocumentation",
              "src": "2676:210:9",
              "text": "@notice Allow a seller to list an NFT for sale, transfer the token to the MetaMarket address\n @dev The safeTransferFrom() handles ensuring ownership and approvals, so they aren't included as modifiers."
            },
            "functionSelector": "24780c56",
            "id": 1721,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createListing",
            "nameLocation": "2898:13:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1658,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1653,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "2920:12:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1721,
                  "src": "2912:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1652,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2912:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1655,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2939:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1721,
                  "src": "2934:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1654,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2934:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1657,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "2953:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1721,
                  "src": "2948:10:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1656,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2948:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2911:48:9"
            },
            "returnParameters": {
              "id": 1661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1660,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1721,
                  "src": "2985:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1659,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2985:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2984:6:9"
            },
            "scope": 1795,
            "src": "2889:747:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1732,
              "nodeType": "Block",
              "src": "4048:6:9",
              "statements": []
            },
            "documentation": {
              "id": 1722,
              "nodeType": "StructuredDocumentation",
              "src": "3640:306:9",
              "text": "@notice Allow a seller to remove the listing and get the token back from the MetaMarket address\n @dev To Do:\n      1. validate that msg.sender is the seller\n      2. mark the item as 'cancelled'\n      3. emit a LogRemovedListing event\n      4. Return a bool for success/failure"
            },
            "functionSelector": "479ad4c3",
            "id": 1733,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1727,
                    "name": "listingId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1724,
                    "src": "4017:9:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1728,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1726,
                  "name": "ensureSeller",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1622,
                  "src": "4004:12:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "4004:23:9"
              }
            ],
            "name": "removeListing",
            "nameLocation": "3958:13:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1725,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1724,
                  "mutability": "mutable",
                  "name": "listingId",
                  "nameLocation": "3977:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1733,
                  "src": "3972:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1723,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3972:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3971:16:9"
            },
            "returnParameters": {
              "id": 1731,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1730,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1733,
                  "src": "4040:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1729,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4040:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4039:6:9"
            },
            "scope": 1795,
            "src": "3949:105:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1744,
              "nodeType": "Block",
              "src": "4448:6:9",
              "statements": []
            },
            "documentation": {
              "id": 1734,
              "nodeType": "StructuredDocumentation",
              "src": "4058:291:9",
              "text": "@notice Allow a seller to update the listing price\n @dev To Do:\n      1. validate it is the seller attempting to update the listing\n      2. validate that msg.sender is the seller\n      3. emit a LogUpdatedListing event\n      4. Return a bool for success/failure"
            },
            "functionSelector": "8d6cc56d",
            "id": 1745,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1739,
                    "name": "listingId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1736,
                    "src": "4417:9:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1740,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1738,
                  "name": "ensureSeller",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1622,
                  "src": "4404:12:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "4404:23:9"
              }
            ],
            "name": "updatePrice",
            "nameLocation": "4361:11:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1737,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1736,
                  "mutability": "mutable",
                  "name": "listingId",
                  "nameLocation": "4378:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1745,
                  "src": "4373:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1735,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4373:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4372:16:9"
            },
            "returnParameters": {
              "id": 1743,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1742,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1745,
                  "src": "4440:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1741,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4440:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4439:6:9"
            },
            "scope": 1795,
            "src": "4352:102:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1759,
              "nodeType": "Block",
              "src": "4947:6:9",
              "statements": []
            },
            "documentation": {
              "id": 1746,
              "nodeType": "StructuredDocumentation",
              "src": "4459:345:9",
              "text": "@notice Allow a buyer to update the listing price\n @dev To Do: \n        1. validate the transaction has sufficient eth\n        2. transfer eth to seller\n        3. transfer nft to buyer\n        4. mark listing as Sold\n        5. return any excess funds to buyer\n        6. return a bool for success/failure"
            },
            "functionSelector": "169d5a7d",
            "id": 1760,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1751,
                    "name": "listingId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1748,
                    "src": "4888:9:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1752,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1750,
                  "name": "paidEnough",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1629,
                  "src": "4877:10:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "4877:21:9"
              },
              {
                "arguments": [
                  {
                    "id": 1754,
                    "name": "listingId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1748,
                    "src": "4916:9:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1755,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1753,
                  "name": "returnExcess",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1636,
                  "src": "4903:12:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "4903:23:9"
              }
            ],
            "name": "purchaseListing",
            "nameLocation": "4816:15:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1749,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1748,
                  "mutability": "mutable",
                  "name": "listingId",
                  "nameLocation": "4837:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1760,
                  "src": "4832:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1747,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4832:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4831:16:9"
            },
            "returnParameters": {
              "id": 1758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1757,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1760,
                  "src": "4939:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1756,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4939:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4938:6:9"
            },
            "scope": 1795,
            "src": "4807:146:9",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1770,
              "nodeType": "Block",
              "src": "5174:6:9",
              "statements": []
            },
            "documentation": {
              "id": 1761,
              "nodeType": "StructuredDocumentation",
              "src": "4958:119:9",
              "text": "@notice Allow the contract owner to withdraw accrued fees\n @dev To Do: No fees currently collected to withdraw"
            },
            "functionSelector": "5e318e07",
            "id": 1771,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1766,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1765,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1605,
                  "src": "5142:9:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "5142:9:9"
              }
            ],
            "name": "withdrawFees",
            "nameLocation": "5089:12:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1763,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5107:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1771,
                  "src": "5102:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1762,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5102:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5101:13:9"
            },
            "returnParameters": {
              "id": 1769,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1768,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1771,
                  "src": "5164:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1767,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5164:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5163:6:9"
            },
            "scope": 1795,
            "src": "5080:100:9",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              948
            ],
            "body": {
              "id": 1793,
              "nodeType": "Block",
              "src": "5535:88:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "6f6e455243373231526563656976656428616464726573732c616464726573732c75696e743235362c627974657329",
                            "id": 1789,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5567:49:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_150b7a023d4804d13e8c85fb27262cb750cf6ba9f9dd3bb30d90f482ceeb4b1f",
                              "typeString": "literal_string \"onERC721Received(address,address,uint256,bytes)\""
                            },
                            "value": "onERC721Received(address,address,uint256,bytes)"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_150b7a023d4804d13e8c85fb27262cb750cf6ba9f9dd3bb30d90f482ceeb4b1f",
                              "typeString": "literal_string \"onERC721Received(address,address,uint256,bytes)\""
                            }
                          ],
                          "id": 1788,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967288,
                          "src": "5557:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 1790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5557:60:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1787,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5550:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes4_$",
                        "typeString": "type(bytes4)"
                      },
                      "typeName": {
                        "id": 1786,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "5550:6:9",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5550:68:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 1785,
                  "id": 1792,
                  "nodeType": "Return",
                  "src": "5543:75:9"
                }
              ]
            },
            "documentation": {
              "id": 1772,
              "nodeType": "StructuredDocumentation",
              "src": "5184:131:9",
              "text": "@notice Override function to allow for recieving ERC721 tokens\n @dev Figure out how to remove warning re: unused variables"
            },
            "functionSelector": "150b7a02",
            "id": 1794,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nameLocation": "5327:16:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1782,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5509:8:9"
            },
            "parameters": {
              "id": 1781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1774,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "5385:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1794,
                  "src": "5377:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1773,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5377:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1776,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5409:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1794,
                  "src": "5401:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1775,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5401:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1778,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5429:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1794,
                  "src": "5421:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1777,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5421:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1780,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "5459:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1794,
                  "src": "5444:19:9",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1779,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5444:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5343:151:9"
            },
            "returnParameters": {
              "id": 1785,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1784,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1794,
                  "src": "5527:6:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 1783,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "5527:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5526:8:9"
            },
            "scope": 1795,
            "src": "5318:305:9",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1796,
        "src": "259:5366:9",
        "usedErrors": []
      }
    ],
    "src": "33:5593:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {},
      "links": {},
      "address": "0x28842b54dFB29bDCe18a334130c441924D66b248",
      "transactionHash": "0x52964bf805d339ed2da20c893b689adb2eb6e41f9b1cd45ac03054ef1428f310"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0x5992Ce708A94F8C61816442ff2347989158Caa3E",
      "transactionHash": "0x8a119cf92294f5a914282245b6be736abbdb7f8e1c23cf9a0d3855f1b2886be7"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-11-30T22:29:20.916Z",
  "devdoc": {
    "author": "@kevsherman",
    "kind": "dev",
    "methods": {
      "createListing(address,uint256,uint256)": {
        "details": "The safeTransferFrom() handles ensuring ownership and approvals, so they aren't included as modifiers."
      },
      "onERC721Received(address,address,uint256,bytes)": {
        "details": "Figure out how to remove warning re: unused variables"
      },
      "purchaseListing(uint256)": {
        "details": "To Do:         1. validate the transaction has sufficient eth        2. transfer eth to seller        3. transfer nft to buyer        4. mark listing as Sold        5. return any excess funds to buyer        6. return a bool for success/failure"
      },
      "removeListing(uint256)": {
        "details": "To Do:      1. validate that msg.sender is the seller      2. mark the item as 'cancelled'      3. emit a LogRemovedListing event      4. Return a bool for success/failure"
      },
      "updatePrice(uint256)": {
        "details": "To Do:      1. validate it is the seller attempting to update the listing      2. validate that msg.sender is the seller      3. emit a LogUpdatedListing event      4. Return a bool for success/failure"
      },
      "withdrawFees(uint256)": {
        "details": "To Do: No fees currently collected to withdraw"
      }
    },
    "title": "A smart contract to enable buying and selling of ERC721 tokens",
    "version": 1
  },
  "userdoc": {
    "events": {
      "LogNewListing(uint256)": {
        "notice": "Event to be emitted when a new Listing has been created"
      },
      "LogRemovedListing(uint256)": {
        "notice": "Event to be emitted when a Listing has been removed"
      },
      "LogSoldListing(uint256)": {
        "notice": "Event emitted when a Listing has been updated"
      },
      "LogUpdatedListing(uint256)": {
        "notice": "Event to be emitted when a Listing has been updated"
      }
    },
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Initializes the contract by setting the owner and the totalListings variable."
      },
      "createListing(address,uint256,uint256)": {
        "notice": "Allow a seller to list an NFT for sale, transfer the token to the MetaMarket address"
      },
      "listings(uint256)": {
        "notice": "Mapping from listingId to Listing"
      },
      "onERC721Received(address,address,uint256,bytes)": {
        "notice": "Override function to allow for recieving ERC721 tokens"
      },
      "owner()": {
        "notice": "Owner set when contract deployed"
      },
      "purchaseListing(uint256)": {
        "notice": "Allow a buyer to update the listing price"
      },
      "removeListing(uint256)": {
        "notice": "Allow a seller to remove the listing and get the token back from the MetaMarket address"
      },
      "totalListings()": {
        "notice": "Count of the total listings created"
      },
      "updatePrice(uint256)": {
        "notice": "Allow a seller to update the listing price"
      },
      "withdrawFees(uint256)": {
        "notice": "Allow the contract owner to withdraw accrued fees"
      }
    },
    "notice": "Still a WIP, demo purposes only",
    "version": 1
  }
}